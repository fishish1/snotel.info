name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # ACM certificate for EDGE endpoints must be in us-east-1

      - name: Deploy static site to S3
        run: |
          aws s3 sync public/ s3://snotel.info

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Upload node_modules to S3 layer paths
        run: |
          echo "=== Debug: Checking for node_modules directories ==="
          find lambda -mindepth 2 -maxdepth 2 -type d -name node_modules
          
          if [ $(find lambda -mindepth 2 -maxdepth 2 -type d -name node_modules | wc -l) -eq 0 ]; then
            echo "No node_modules directories found!"
            echo "Lambda directory structure:"
            find lambda -type d | head -10
            exit 0
          fi
          
          find lambda -mindepth 2 -maxdepth 2 -type d -name node_modules | while read dir; do
            parent=$(dirname "$dir")
            funcname=$(basename "$parent")
            
            echo "=== Processing function: $funcname ==="
            echo "Directory: $dir"
            
            # Test AWS permissions first
            echo "Testing S3 permissions..."
            if ! aws s3 ls s3://snotel.info.backend/ > /dev/null 2>&1; then
              echo "ERROR: Cannot list S3 bucket. Check permissions."
              continue
            fi
            
            echo "Uploading node_modules for function: $funcname"
            
            # Upload with verbose output and error capture
            if aws s3 sync "$dir" "s3://snotel.info.backend/layers/${funcname}/nodejs/node_modules" --debug 2>&1; then
              echo "SUCCESS: Uploaded layer for $funcname to S3"
            else
              echo "ERROR: Failed to upload layer for $funcname"
              exit 1
            fi
          done

      - name: Debug - Verify S3 uploads
        run: |
          echo "Checking S3 bucket contents:"
          aws s3 ls s3://snotel.info.backend/layers/

      - name: Build and Deploy Lambdas with SAM
        run: |
          sam build --template-file cloudformation/lambdafunctions
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name snotel-info-stack --capabilities CAPABILITY_IAM --parameter-overrides CertificateArn=${{ secrets.AWS_CERTIFICATE_ARN }} LambdaExecutionRoleArn=${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }} --s3-bucket snotel.info.backend --template-file cloudformation/lambdafunctions