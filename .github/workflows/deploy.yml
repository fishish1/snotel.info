name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # ACM certificate for EDGE endpoints must be in us-east-1

      - name: Deploy static site to S3
        run: |
          aws s3 sync public/ s3://snotel.info

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Zip node_modules in lambda subfolders
        run: |
          find lambda -mindepth 2 -maxdepth 2 -type d -name node_modules | while read dir; do
            parent=$(dirname "$dir")
            # Create nodejs directory and copy node_modules into it
            mkdir -p "$parent/nodejs"
            cp -r "$dir" "$parent/nodejs/"
            # Zip the nodejs directory containing node_modules
            (cd "$parent" && zip -r "nodejs.zip" "nodejs")
            # Clean up the temporary nodejs directory
            rm -rf "$parent/nodejs"
          done

      - name: Upload layer zips to S3
        run: |
          find lambda -name "nodejs.zip" -type f | while read zipfile; do
            # Extract function name from path (e.g., lambda/generateState/nodejs.zip -> generateState)
            funcname=$(echo "$zipfile" | cut -d'/' -f2)
            aws s3 cp "$zipfile" "s3://snotel.info.backend/layers/${funcname}-nodejs.zip"
          done

      - name: Build and Deploy Lambdas with SAM
        run: |
          sam build --template-file cloudformation/lambdafunctions
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name snotel-info-stack --capabilities CAPABILITY_IAM --parameter-overrides CertificateArn=${{ secrets.AWS_CERTIFICATE_ARN }} LambdaExecutionRoleArn=${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }} --s3-bucket snotel.info.backend --template-file cloudformation/lambdafunctions